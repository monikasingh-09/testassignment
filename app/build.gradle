plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "kotlin-kapt"
    id "kotlin-parcelize"
    id "dagger.hilt.android.plugin"
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.qot.assignment"
        minSdk 23
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://dummyapi.io/data/v1/\"")
            buildConfigField("String", "DUMMY_API_ID", "\"614db79e1b621ca3a8fa2693\"")
        }
        debug{
            buildConfigField("String", "BASE_URL", "\"https://dummyapi.io/data/v1/\"")
            buildConfigField("String", "DUMMY_API_ID", "\"614db79e1b621ca3a8fa2693\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    implementation("com.google.dagger:hilt-android:2.38.1")
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ext_version"

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"


    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"

    // test mock objects
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"

    // test assertions
    testImplementation "io.kotest:kotest-assertions-core:$kotest_assertion_version"
    androidTestImplementation "io.kotest:kotest-assertions-core:$kotest_assertion_version"

}